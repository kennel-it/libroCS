<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html>
<!-- grafoIndice requires="richiestaHttp rispostaHttp cookies" group="servizi" -->
<!-- changelog 2018-02-21 inseriti contenuti -->
<!-- changelog 2020-03-03 maggior dettaglio nelle informazioni -->
<!-- changelog 2021-02-22 inserito json_parse -->
<!-- changelog 2021-03-10 inserito Samesite nei cookies -->
<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
   	<meta charset="UTF-8"/>
       <title>php</title>
       <link type="text/css" rel="stylesheet" href="style.css"/>
       <script type="text/javascript" src="script/test.js"></script>         
   </head>
<body>
<header>
	<h1>php</h1>
	<p>variabili e funzioni php per la comunicazione via http</p>
</header>
<article>

	<p>Negli script PHP abbiamo a disposizione diverse variabili predefinite e istruzioni che ci
	permettono di comunicare su HTTP, qui sotto elenchiamo brevemente i più comuni.</p>
	
	<h2>GET &amp; POST</h2>
	<p>Iniziamo dai meccanismi più facili: recuperare le informazioni fornite tramite
	HTTP (ad esempio tramite un form HTLML ma non solo).</p>
	<dl>
		<dt>$_GET</dt>
		<dd>è un vettore che contiene le variabili passate tramite una richiesta get di http
		es: <code>$_GET['nome']</code></dd>
		<dt>$_POST</dt>
		<dd>è un vettore che contiene le variabili passate tramite una richiesta post di http
		es: <code>$_POST['password']</code></dd>
	</dl>
	
	<p>Poniamo per esempio che l'URL richiesta <code>http://pluto.server.org/script.php?nome=Godzilla</code>:
	lo scipt PHP potrà leggere il valore <code>Godzilla</code> nella variabile <code>$_GET['nome']</code>.</p>
		
	<h2>Body</h2>
	<p>Recuperre informaizoni dal body è decisamente semplice:
	<code>$testo=file_get_contents('php://input')</code>, nella variabile
	<var>$testo</var> troveremo tutto il contenuto del corpo del messaggio</p>
	
	<h2>Headers</h2>
	<p>Impostare un header HTTP è molto semplice ma bisogna tenere in mente che va fatto
	prima di generare il body.</p>
	<p>L'istruzione da usare è 
	<a href="https://www.php.net/manual/en/function.header.php"><code>header("Nome-Header: valore")</code></a>
	che può ad esempio essere usata per impostare il tipo mime della risposta
	<code>header('Content-Type: application/json')</code> (il tipo mime di default è text/html)
	o qualsiasi altro header. </p>
	<p>Un caso particolare dell'uso di header è quello per impostare lo stato della risposta: 
	se si vuol fare questo la stringa deve iniziare con <code>HTTP/</code> come ad esempio in
	<code>header("HTTP/1.0 404 Not Found")</code>.</p>
	
	<h2>JSON</h2>
	<p>Anche PHP supporta JSON, possiamo ad esempio semplicemente trasformate un testo JSON
	nel corrispondente hash PHP: la funzione 
	<a href="https://www.php.net/manual/en/function.json-decode.php"><code>json_decode</code></a>
	serve appunto a questo.
	Vediamo un esempio che la variabile <var>$var</var> contenga il seguente testo JSON:</p>
	
	<pre>$var='{"chi":{"nome":"mario","cognome":"rossi"},"altezza":180}';</pre>
	
	<p>Possiamo costruire l'hash corrispondente scrivendo:</p>
	
	<pre>$x = json_decode($var,true);</pre>
	
	<p>In questo caso il <code>true</code> finale dice di costruire un hash, in caso contrario
	json_decode costruirebbe un oggetto PHP.</p>
	
	<p>Per avere il nome basta scrivere <code>$x['chi']['nome']</code></p>


	<h2>Cookies</h2>
	<p>In PHP è possibile impostare i cookie utilizzando l'istruzione 
	<a href="https://www.php.net/manual/en/function.setcookie.php"><code>setcookie(nome, valore)</code></a>
	e leggerli utilizzando la superglobal 
	<a href="https://www.php.net/manual/en/reserved.variables.cookies.php"><code>$_COOKIE</code></a>,
	il seguente frammento di programma imposta un cookie chiamato <var>pigreco</var>
	e ne legge uno chiamato <var>nomeUtente</var>.</p>
	
<pre>
setcookie("pigreco", "3.14");

echo $_COOKIE['nomeUtente']."\n";
</pre>

	<p>Attualmente (2021) i browser hanno incrementato il livello di sicurezza e per questo motivo
	impostando i cookie come sopra viene stampato un messaggio di attenzione nella console.
	Questo è dovuto al fatto che i cookie vengono utilizzati per profilare gli utenti,
	attualmente una impostazione più conforme alle specifiche è questa:</p>
<pre>
setcookie("t2", "116.28", [
    'expires' => time() + 86400,
    'samesite' => 'Lax',
]);
</pre>
	<p>Come riportato su 
	<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie">MDN</a>,
	"samesite:Lax" fa si che il cookie venga inviato esclusivamente al sito
	che lo ha impostato ma che venga inviato anche quando da un sito esterno si segue un link
	verso il sito stesso. La parte "expires" serve invece ad impostare la scadenza del cookie.</p>

	<h2>Sessioni</h2>
	<p>Questo è un meccanismo che ci consente di mantenre uno stato tra una esecuzione e l'altra di uno script
	o tra diversi script dello stesso sito... il meccanismo usato è quello dei cookie ma li gestisce PHP
	e noi abbiamo a disposizone una superglobal per mantenere i valori tra una chiamata e l'altra.</p>
	<dl>
		<dt>session_start()</dt>
		<dd>avvia una sessione o ne apre una già avviata, va usata all'inizio dello script/pagina
		prima di produrre output</dd>
		<dt>$_SESSION</dt>
		<dd>è un vettore che contiene dei dati che vengono mantenuti (per lo stesso utente)
		da una richiesta all'altra, va usata dopo <code>session_start()</code></dd>
	</dl>

</article>
</body>
</html>